{"version":3,"file":"static/js/207.499b9610.chunk.js","mappings":"0QAGaA,EAAOC,EAAAA,GAAAA,KAAH,4DAKJC,EAAQD,EAAAA,GAAAA,GAAH,kHAQLE,EAAQF,EAAAA,GAAAA,MAAH,6FAMLG,EAAQH,EAAAA,GAAAA,MAAH,6DAKLI,EAASJ,EAAAA,GAAAA,OAAH,+VAGN,SAAAK,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGnB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,SAAnB,IACD,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,MAAnB,IACJ,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,CAAlB,IAKP,SAAAP,GAAC,OAAIA,EAAEC,MAAME,OAAOK,OAAnB,IACU,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,KAAnB,IACP,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,QAAQC,MAApB,IAINC,EAAMjB,EAAAA,GAAAA,EAAH,mFAGL,SAAAK,GAAC,OAAIA,EAAEC,MAAME,OAAOU,aAAnB,IAGCC,GAAOnB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,2FAGN,SAAAK,GAAC,OAAIA,EAAEC,MAAME,OAAOM,KAAnB,I,SC1CCO,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAQKC,EAAQ,WACZR,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,UAAC/B,EAAD,CAAMoC,SAba,SAAAC,GACnBA,EAAIC,iBACJf,GAASgB,EAAAA,EAAAA,IAAS,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCK,GACD,EAS+BK,aAAa,MAA3C,WACE,SAACtC,EAAD,2CACA,UAACC,EAAD,mBAEE,SAACC,EAAD,CACEqC,KAAK,OACLf,KAAK,OACLgB,WAAS,EACTR,MAAOR,EACPiB,SAAUX,QAGd,UAAC7B,EAAD,oBAEE,SAACC,EAAD,CACEqC,KAAK,QACLf,KAAK,QACLQ,MAAON,EACPe,SAAUX,QAGd,UAAC7B,EAAD,uBAEE,SAACC,EAAD,CACEqC,KAAK,WACLf,KAAK,WACLQ,MAAOJ,EACPa,SAAUX,QAGd,SAAC3B,EAAD,CAAQoC,KAAK,SAAb,uBACA,UAACvB,EAAD,wCAC2B,SAACE,EAAD,CAAMwB,GAAG,SAAT,oBAD3B,SAKL,EC3ED,EAJiB,WACf,OAAO,SAACtB,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  width: 340px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n\n  font-weight: 400;\n  font-size: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  margin-top: 4px;\n`;\n\nexport const Button = styled.button`\n  width: 340px;\n  margin-bottom: 20px;\n  padding: ${p => p.theme.space[1]}px ${p => p.theme.space[2]}px;\n  font-weight: 400;\n\n  background-color: ${p => p.theme.colors.secondary};\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.s}px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.hover};\n    box-shadow: ${p => p.theme.shadows.shadow};\n  }\n`;\n\nexport const Txt = styled.p`\n  font-size: 16 px;\n  text-align: center;\n  color: ${p => p.theme.colors.primaryAccent};\n`;\n\nexport const Link = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  color: ${p => p.theme.colors.hover};\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport {\n  Form,\n  Title,\n  Label,\n  Input,\n  Button,\n  Txt,\n  Link,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Title>Register to Contact Manager</Title>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          autoFocus\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n      <Txt>\n        Already have an account? <Link to=\"/login\">Log in</Link>.\n      </Txt>\n    </Form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["Form","styled","Title","Label","Input","Button","p","theme","space","colors","secondary","border","radii","s","primary","hover","shadows","shadow","Txt","primaryAccent","Link","NavLink","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","reset","onSubmit","evt","preventDefault","register","autoComplete","type","autoFocus","onChange","to"],"sourceRoot":""}