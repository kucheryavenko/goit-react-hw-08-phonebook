{"version":3,"file":"static/js/284.ec3872ea.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,GAAAA,KAAH,4DAKJC,EAAQD,EAAAA,GAAAA,GAAH,kHAQLE,EAAQF,EAAAA,GAAAA,MAAH,6FAMLG,EAAQH,EAAAA,GAAAA,MAAH,yCAILI,EAASJ,EAAAA,GAAAA,OAAH,uUAEN,SAAAK,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGnB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,SAAnB,IACD,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,MAAnB,IACJ,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,CAAlB,IAKP,SAAAP,GAAC,OAAIA,EAAEC,MAAME,OAAOK,OAAnB,IACU,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,KAAnB,IACP,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,QAAQC,MAApB,I,SClCNC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAQKC,EAAQ,WACZP,EAAS,IACTE,EAAY,GACb,EAED,OACE,UAACzB,EAAD,CAAM+B,SAZa,SAAAC,GACnBA,EAAIC,iBACJd,GAASe,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOE,SAAAA,KACxBM,GACD,EAQ+BK,aAAa,MAA3C,WACE,SAACjC,EAAD,yCACA,UAACC,EAAD,oBAEE,SAACC,EAAD,CACEgC,KAAK,QACLR,KAAK,QACLS,WAAS,EACTR,MAAOP,EACPgB,SAAUZ,QAGd,UAACvB,EAAD,uBAEE,SAACC,EAAD,CACEgC,KAAK,WACLR,KAAK,WACLC,MAAOL,EACPc,SAAUZ,QAGd,SAACrB,EAAD,CAAQ+B,KAAK,SAAb,qBAGL,ECnDD,EAJc,WACZ,OAAO,SAAClB,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 340px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n\n  font-weight: 400;\n  font-size: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n`;\n\nexport const Button = styled.button`\n  width: 340px;\n  padding: ${p => p.theme.space[1]}px ${p => p.theme.space[2]}px;\n  font-weight: 400;\n\n  background-color: ${p => p.theme.colors.secondary};\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.s}px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.hover};\n    box-shadow: ${p => p.theme.shadows.shadow};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { Form, Title, Label, Input, Button } from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(logIn({ email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Title>Log in to Contact Manager</Title>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          autoFocus\n          value={email}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Login</Button>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["Form","styled","Title","Label","Input","Button","p","theme","space","colors","secondary","border","radii","s","primary","hover","shadows","shadow","LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","reset","onSubmit","evt","preventDefault","logIn","autoComplete","type","autoFocus","onChange"],"sourceRoot":""}