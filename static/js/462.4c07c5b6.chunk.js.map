{"version":3,"file":"static/js/462.4c07c5b6.chunk.js","mappings":"4PAEaA,EAAYC,EAAAA,GAAAA,IAAH,+C,mBCFTC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,EAAwB,SAAAT,GACnC,IAAMQ,EAASD,EAAaP,GACtBC,EAAWF,EAAeC,GAEhC,IAAKQ,EACH,OAAOP,EAET,IAAMS,EAAmBF,EAAOG,oBAQhC,OAPwBV,EAASO,QAAO,YAAuB,IAApBI,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAK/C,OAJuBD,EAAKD,oBAEXG,SAASJ,IACxBG,EAAOC,SAASJ,EAEnB,GAEF,E,oBCtBYK,EAAOjB,EAAAA,GAAAA,KAAH,iLAOE,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAQrB,EAAAA,GAAAA,MAAH,gHAEC,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGL,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGHE,EAAYtB,EAAAA,GAAAA,MAAH,8HAIH,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGNG,EAAcvB,EAAAA,GAAAA,MAAH,8HAIL,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGNI,EAASxB,EAAAA,GAAAA,OAAH,0VAEN,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAE1B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEL,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,OAAnB,IACU,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,MAAnB,IAEJ,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,MAAMC,CAAlB,IAKI,SAAAX,GAAC,OAAIA,EAAEC,MAAMM,OAAOK,KAAnB,IACP,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,QAAQC,MAApB,I,SCrCNC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOpB,EAAP,KAAaqB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeqB,EAAf,KACMjC,GAAWkC,EAAAA,EAAAA,IAAYpC,GACvBqC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,MACTC,GAAWD,EAAAA,EAAAA,MAEXE,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,OAApB/B,EAAR,EAAQA,KAAMgC,EAAd,EAAcA,MACd,OAAQhC,GACN,IAAK,OACH,OAAOqB,EAAQW,GACjB,IAAK,SACH,OAAOV,EAAUU,GACnB,QACE,OAEL,EAcKC,EAAiB,SAAC,GAAsB,IAApBjC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACxBiC,EAAiBlC,EAAKmC,cAO5B,OANe9C,EAAS+C,MACtB,SAAAC,GAAO,OACLA,EAAQrC,KAAKmC,gBAAkBD,GAC/BG,EAAQpC,SAAWA,CAFd,GAMV,EAEKqC,EAAQ,WACZjB,EAAQ,IACRC,EAAU,GACX,EAED,OACE,UAACnB,EAAD,CAAMoC,SA7Ba,SAAAT,GACnBA,EAAIU,iBAEAP,EAAe,CAAEjC,KAAAA,EAAMC,OAAAA,IACzBwC,EAAAA,GAAAA,MAAA,UAAezC,EAAf,wDAIFwB,GAASkB,EAAAA,EAAAA,IAAW,CAAE1C,KAAAA,EAAMC,OAAAA,KAC5BqC,IACD,EAmBC,WACE,SAAC/B,EAAD,CAAOoC,QAASjB,EAAhB,mBACA,SAAClB,EAAD,CACEoC,GAAIlB,EACJmB,KAAK,OACL7C,KAAK,OACLgC,MAAOhC,EACP8C,QAAQ,yHACRC,MAAM,yIACNC,YAAY,gBACZC,UAAQ,EACRC,SAAUrB,KAEZ,SAACtB,EAAD,CAAOoC,QAASf,EAAhB,qBACA,SAACnB,EAAD,CACEmC,GAAIhB,EACJiB,KAAK,MACL7C,KAAK,SACLgC,MAAO/B,EACP6C,QAAQ,yFACRC,MAAM,+FACNC,YAAY,eACZC,UAAQ,EACRC,SAAUrB,KAEZ,SAACnB,EAAD,CAAQmC,KAAK,SAAb,2BAGL,EC1FYM,EAAOjE,EAAAA,GAAAA,GAAH,sFAMJkE,EAAOlE,EAAAA,GAAAA,GAAH,6NAIG,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEQ,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,OAAO0C,MAAnB,IAGT,SAAAjD,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITgD,EAAcpE,EAAAA,GAAAA,EAAH,sBAEXwB,EAASxB,EAAAA,GAAAA,OAAH,gVAEN,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGnB,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,OAAO4C,SAAnB,IACD,SAAAnD,GAAC,OAAIA,EAAEC,MAAMM,OAAO0C,MAAnB,IACJ,SAAAjD,GAAC,OAAIA,EAAEC,MAAMS,MAAMC,CAAlB,IAKP,SAAAX,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,OAAnB,IACU,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAO6C,MAAnB,IACP,SAAApD,GAAC,OAAIA,EAAEC,MAAMY,QAAQC,MAApB,IC3BNuC,EAAc,WACzB,IAAMC,GAAkBnC,EAAAA,EAAAA,IAAY1B,GAC9B2B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC0B,EAAD,UACGO,EAAgBC,KAAI,gBAAGf,EAAH,EAAGA,GAAI5C,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,UAACmD,EAAD,YACE,UAACE,EAAD,WACGtD,EADH,MACU,0BAAOC,QAEjB,SAAC,EAAD,CAAQ4C,KAAK,SAASe,QAAS,kBAXX,SAAAhB,GAC1BpB,GAASqC,EAAAA,EAAAA,IAAcjB,GACxB,CAS4CkB,CAAoBlB,EAA1B,EAA/B,sBAJSA,EADQ,KAY1B,E,UC9BYrC,EAAQrB,EAAAA,GAAAA,MAAH,gHAEC,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGL,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGHyD,EAAQ7E,EAAAA,GAAAA,MAAH,2KAMA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICXP0D,EAAS,WACpB,IAAMC,GAAWtC,EAAAA,EAAAA,MACX/B,GAAS2B,EAAAA,EAAAA,IAAY5B,GACrB6B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,SAAC,EAAD,CAAOkB,QAASsB,EAAhB,oCACA,SAACF,EAAD,CACEnB,GAAIqB,EACJpB,KAAK,OACL7C,KAAK,SACLgC,MAAOpC,EACPoD,YAAY,YACZE,SAde,SAAApB,GACnB,IAAQE,EAAUF,EAAIC,OAAdC,MACRR,GAAS0C,EAAAA,EAAAA,GAAUlC,GACpB,MAeF,EC3BYmC,EAAWjF,EAAAA,GAAAA,GAAH,iDACF,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICAP8D,EAAU,SAAC,GAAyB,IAAvBrB,EAAsB,EAAtBA,MAAOsB,EAAe,EAAfA,SAC/B,OACE,4BACE,SAACF,EAAD,UAAWpB,IACVsB,IAGN,E,mBCRYC,EAAYpF,EAAAA,GAAAA,GAAH,iDACH,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICAPiE,EAAQ,SAAC,GAAe,IAAbxB,EAAY,EAAZA,MACtB,OAAO,SAACuB,EAAD,UAAYvB,GACpB,EAEDwB,EAAMC,UAAY,CAChBzB,MAAO0B,IAAAA,OAAAA,YCNF,I,EAAMC,GAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,uBAAIA,GACZ,E,WCFYC,GAAkB1F,EAAAA,GAAAA,IAAH,sECCf2F,GAAS,WACpB,OACE,SAACD,GAAD,WACE,SAAC,MAAD,CACEE,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,EC4BD,GA1BiB,WACf,IAAM1D,GAAWC,EAAAA,EAAAA,MACXpC,GAAWkC,EAAAA,EAAAA,IAAYpC,GACvBK,GAAY+B,EAAAA,EAAAA,IAAYhC,GACxBG,GAAQ6B,EAAAA,EAAAA,IAAY9B,GAM1B,OAJA0F,EAAAA,EAAAA,YAAU,WACR3D,GAAS4D,EAAAA,EAAAA,MACV,GAAE,CAAC5D,KAGF,UAACvC,EAAD,YACE,SAACsF,EAAD,CAAOxB,MAAO,eACd,SAAC5B,EAAD,KACA,UAACiD,EAAD,CAASrB,MAAO,WAAhB,WACE,SAACiB,EAAD,IACCxE,IAAcE,IAAS,SAACmF,GAAD,IACvBxF,EAASgG,OAAS,IAAK,SAAC5B,EAAD,IACH,IAApBpE,EAASgG,SAAiB7F,IACzB,SAACkF,GAAD,CAAcC,QAAQ,wCAK/B,C","sources":["pages/Contacts/Contacts.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Notification/Notification.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n  const filter = selectFilter(state);\n  const contacts = selectContacts(state);\n\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const visibleContacts = contacts.filter(({ name, number }) => {\n    const normalizedName = name.toLocaleLowerCase();\n    const result =\n      normalizedName.includes(normalizedFilter) ||\n      number.includes(normalizedFilter);\n    return result;\n  });\n  return visibleContacts;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 380px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.space[1]}px;\n\n  font-weight: 700;\n  font-size: ${p => p.theme.space[4]}px;\n`;\n\nexport const InputName = styled.input`\n  display: block;\n  width: 340px;\n  height: 30px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[1]}px;\n`;\n\nexport const InputNumber = styled.input`\n  display: block;\n  width: 340px;\n  height: 30px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[1]}px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: ${p => p.theme.space[1]}px ${p => p.theme.space[4]}px;\n  font-weight: 500;\n  font-size: ${p => p.theme.space[3]}px;\n\n  color: ${p => p.theme.colors.primary};\n  background-color: ${p => p.theme.colors.accent};\n  border: none;\n  border-radius: ${p => p.theme.radii.s}px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    background-color: ${p => p.theme.colors.hover};\n    box-shadow: ${p => p.theme.shadows.shadow};\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport {\n  Form,\n  Label,\n  InputName,\n  InputNumber,\n  Button,\n} from 'components/ContactForm/ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (checkDublicate({ name, number })) {\n      toast.error(`${name} is already in contacts. Please add a new contact.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const checkDublicate = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    const result = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === normalizedName &&\n        contact.number === number\n    );\n\n    return result;\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameId}>Name</Label>\n      <InputName\n        id={nameId}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Homer Simpson\"\n        required\n        onChange={handleChange}\n      />\n      <Label htmlFor={numberId}>Number</Label>\n      <InputNumber\n        id={numberId}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        placeholder=\"742-987-4457\"\n        required\n        onChange={handleChange}\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 520px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  padding-bottom: ${p => p.theme.space[0]}px;\n\n  border-bottom: 1px solid ${p => p.theme.colors.border};\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[1]}px;\n  }\n`;\n\nexport const Description = styled.p``;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: ${p => p.theme.space[0]}px ${p => p.theme.space[2]}px;\n  font-weight: 400;\n\n  background-color: ${p => p.theme.colors.secondary};\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.s}px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.delete};\n    box-shadow: ${p => p.theme.shadows.shadow};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\nimport {\n  List,\n  Item,\n  Description,\n  Button,\n} from 'components/ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Description>\n            {name}: <span>{number}</span>\n          </Description>\n          <Button type=\"button\" onClick={() => handleDeleteContact(id)}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.space[1]}px;\n\n  font-weight: 500;\n  font-size: ${p => p.theme.space[3]}px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 300px;\n  height: 30px;\n  padding-left: ${p => p.theme.space[1]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { nanoid } from 'nanoid';\nimport { Label, Input } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n  const searchId = nanoid();\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    const { value } = evt.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <Label htmlFor={searchId}>Find contacts by name</Label>\n      <Input\n        id={searchId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Search...\"\n        onChange={changeFilter}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SubTitle = styled.h2`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { SubTitle } from 'components/Section/Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <div>\n      <SubTitle>{title}</SubTitle>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const TitleHero = styled.h1`\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { TitleHero } from 'components/Title/Title.styled';\n\nexport const Title = ({ title }) => {\n  return <TitleHero>{title}</TitleHero>;\n};\n\nTitle.propTopes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderContainer } from 'components/Loader/Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"32\"\n        visible={true}\n      />\n    </LoaderContainer>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container } from './Contacts.styled';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Section } from 'components/Section';\nimport { Title } from 'components/Title';\nimport { Notification } from 'components/Notification';\nimport { Loader } from 'components/Loader';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title title={'Phonebook'} />\n      <ContactForm />\n      <Section title={'Contacts'}>\n        <Filter />\n        {isLoading && !error && <Loader />}\n        {contacts.length > 0 && <ContactList />}\n        {contacts.length === 0 && !isLoading && (\n          <Notification message=\"You don't have contacts yet...\" />\n        )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","normalizedFilter","toLocaleLowerCase","name","number","includes","Form","p","theme","space","Label","InputName","InputNumber","Button","colors","primary","accent","radii","s","hover","shadows","shadow","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","nameId","nanoid","numberId","handleChange","evt","target","value","checkDublicate","normalizedName","toLowerCase","find","contact","reset","onSubmit","preventDefault","toast","addContact","htmlFor","id","type","pattern","title","placeholder","required","onChange","List","Item","border","Description","secondary","delete","ContactList","visibleContacts","map","onClick","deleteContact","handleDeleteContact","Input","Filter","searchId","setFilter","SubTitle","Section","children","TitleHero","Title","propTopes","PropTypes","Notification","message","LoaderContainer","Loader","strokeColor","strokeWidth","animationDuration","width","visible","useEffect","fetchContacts","length"],"sourceRoot":""}